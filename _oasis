OASISFormat: 0.4
Name:        faraday
Version:     dev
Authors:     Spiros Eliopoulos <spiros@inhabitedtype.com>
Maintainers: Spiros Eliopoulos <spiros@inhabitedtype.com>
Homepage:    https://github.com/inhabitedtype/faraday
Copyrights:  (C) 2015 Inhabited Type LLC
License:     BSD-3-clause
Plugins:     META (0.4), DevFiles (0.4)
BuildTools:  ocamlbuild
OCamlVersion:>= 4.02
Synopsis:    A library for writing fast and memory-efficient serializers.
Description:
    Faraday is a library for writing fast and memory-efficient serializers. Its
    core type and related operation gives the user fine-grained control over
    copying and allocation behavior while serializing user-defined types, and
    presents the output in a form that makes it possible to use vectorized
    write operations, such as the writev system call, or any other platform or
    application-specific output APIs.


Flag async
  Description: build the Async libraries
  Default: false

Flag lwt
  Description: build the Lwt libraries
  Default: false

Flag unix
  Description: build the Unix libraries
  Default: true

Library faraday
  Path:         lib
  Findlibname:  faraday
  BuildDepends:
    bigarray,
    ocplib-endian (>= 0.8),
    ocplib-endian.bigstring
  Modules:
    Faraday

Library faraday_async
  Path:           async
  Findlibname:    async
  Findlibparent:  faraday
  Build$:         flag(async)
  Install$:       flag(async)
  BuildDepends: 
    async,
    core,
    faraday,
    threads
  Modules:
    Faraday_async

Library faraday_lwt
  Path:           lwt
  Findlibname:    lwt
  Findlibparent:  faraday
  Build$:         flag(lwt)
  Install$:       flag(lwt)
  BuildDepends:
    faraday,
    lwt
  Modules:
    Faraday_lwt

Library faraday_lwt_unix
  Path:           lwt
  Findlibname:    lwt-unix
  Findlibparent:  faraday
  Build$:         flag(lwt) && flag(unix)
  Install$:       flag(lwt) && flag(unix)
  BuildDepends:
    faraday.lwt,
    lwt.unix
  Modules:
    Faraday_lwt_unix

Executable test_faraday
  Path:             lib_test
  MainIs:           test_faraday.ml
  Build$:           flag(tests)
  CompiledObject:   best
  Install:          false
  BuildDepends:
    alcotest,
    faraday

Test test_faraday
  Run$:             flag(tests)
  Command:          $test_faraday
  WorkingDirectory: lib_test
